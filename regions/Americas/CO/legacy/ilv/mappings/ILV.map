; TECkit map file generated by the Convert To Unicode Program. 3/20/2006 3:32:37 PM

EncodingName			"ILV-TO-Unicode"
DescriptiveName			"ILV-TO-Unicode"

RHSFlags			(ExpectsNFC)

ByteClass [always] = (0..255)
UniClass [always] = (U+0000..U+00FF)

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; Non-standard mappings as specified in conversion "ILV's" Raw/Unicode columns.
; Only the mappings that are different than codepage 1252's standard mappings are shown.
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

0x80 		<>	 U+20AC
0x82 		<>	 U+0197 
0x83 		<>	 U+0197  U+0301 
0x84 		<>	 U+0197  U+0303 
0x85 		<>	 U+0197  U+0303  U+0301 
0x86 		<>	 U+2020
0x87 		<>	 U+2021
0x88 		<>	 U+0303  U+0301
0x89 		<>	 U+0057  U+0303 
0x8A 		<>	 U+0053  U+0308 
0x8B 		<>	 U+0243 
0x8C 		<>	 U+004E  U+0308 
0x8E 		<>	 U+017D
0x91 		<>	 U+2018
0x92 		<>	 U+2019
0x93 		<>	 U+201C
0x94 		<>	 U+201D
0x95 		<>	 U+2022
0x96 		<>	 U+2013
0x97 		<>	 U+2014
0x98 		<>	 U+0303
0x99 		<>	 U+0077  U+0303 
0x9A 		<>	 U+0073  U+0308 
0x9B 		<>	 U+0180 
0x9C 		<>	 U+006E  U+0308 
0x9E 		<>	 U+017E
0x9F 		<>	 U+0178
0xA2 		<>	 U+0268 
0xA3 		<>	 U+0268  U+0301 
0xA5 		<>	 U+0268  U+0303 
0xA6 		<>	 U+0268  U+0303  U+0301 
0xAA		<>	 U+0308  U+0301  
0xAB 		<>	 U+0128 
0xAC		<>	 U+0303  U+0300
0xB0 		<>	 U+0244 
0xB2 		<>	 U+0244  U+0301 
0xB3 		<>	 U+0244  U+0303 
0xB5 		<>	 U+0244  U+0303  U+0301 
0xB8 		<>	 U+1EBC 
0xB9 		<>	 U+1EBD 
0xBA 		<>	 U+0289 
0xBB 		<>	 U+0129 
0xBC 		<>	 U+0289  U+0301 
0xBD 		<>	 U+0289  U+0303 
0xBE 		<>	 U+0289  U+0303  U+0301 
0xC2 		<>	 U+00C3  U+0301 
0xC5 		<>	 U+00CB  U+0301 
0xC6 		<>	 U+00CB  U+0303 
0xC7 		<>	 U+01D7 
0xCA 		<>	 U+1EBC  U+0301 
0xCE 		<>	 U+0128  U+0301 
0xD4 		<>	 U+1E4C 
0xD7 		<>	 U+0047  U+0303 
0xDB 		<>	 U+1E78 
0xDD 		<>	 U+0168 
0xDE 		<>	 U+2C63 
0xDF		   >	 U+002E
0xE2 		<>	 U+00E3  U+0301 
0xE5 		<>	 U+00EB  U+0301 
0xE6 		<>	 U+00EB  U+0303 
0xE7 		<>	 U+01D8 
0xEA 		<>	 U+1EBD  U+0301 
0xEE 		<>	 U+0129  U+0301 
0xF0 		<>	 U+0111 
0xF4 		<>	 U+1E4D 
0xF7 		<>	 U+0067  U+0303 
0xFB 		<>	 U+1E79 
0xFD 		<>	 U+0169 
0xFE 		<>	 U+1D7D 

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; SFM mappings
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

ByteClass[ascii] = ( 0x20 ..   0x7e )
UniClass [ascii] = ( U+0020 .. U+007e )
Define  A  [ascii]

; match '\id' line with up to 90 characters of text...
'\id ' \
     A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? \
     A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? \
     A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? \
     <> U+005c U+0069 U+0064 U+0020 \
     A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? \
     A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? \
     A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A? A?

ByteClass[sfm] = ( 'a'..'z' 'A'..'Z' '0'..'9')
UniClass [sfm] = ( U+0061..U+007a U+0041..U+005a U+0030..U+0039 )

'\' [sfm] [sfm]? [sfm]? [sfm]? <> U+005c [sfm] [sfm]? [sfm]? [sfm]?

[always] <> [always]  ; everything else is mapped one-to-one
